# ==============================
# 1. Pipeline de CI/CD para Deep Learning
# ==============================

name: CI/CD for Deep Learning  # Nome do pipeline

# Definindo os gatilhos para execu√ß√£o do pipeline
on:
  push:
    branches:
      - main
      # üöÄ Incluindo a nova branch no pipeline para monitorar atualiza√ß√µes no branch principal

# Defini√ß√£o dos jobs que ser√£o executados no pipeline
jobs:
  # ==============================
  # 2. Job para executar os testes unit√°rios
  # ==============================
  unit-tests:  # Renomeado para evitar confus√£o com "teste" no contexto de deep learning
    runs-on: ubuntu-latest  # Executa o job em uma m√°quina Ubuntu mais recente
    steps:
      - name: Checkout do c√≥digo  # Baixa o c√≥digo do reposit√≥rio para a m√°quina de execu√ß√£o
        uses: actions/checkout@v2  # A√ß√£o do GitHub para fazer o checkout do c√≥digo

      - name: Configurar Python  # Define a vers√£o do Python para o ambiente
        uses: actions/setup-python@v3  # A√ß√£o que configura a vers√£o do Python
        with:
          python-version: "3.9"  # Especifica a vers√£o do Python (3.9)

      - name: Instalar depend√™ncias  # Instala as depend√™ncias listadas no arquivo requirements.txt
        run: pip install -r api/requirements.txt  # Instala os pacotes necess√°rios para rodar a API

      - name: Executar testes unit√°rios  # Executa os testes unit√°rios para garantir a integridade do c√≥digo
        run: pytest tests/test_train.py  # Roda os testes definidos no arquivo test_train.py

  # ==============================
  # 3. Job para treinar o modelo
  # ==============================
  train-model:  # Renomeado para destacar que √© a etapa de treinamento
    needs: unit-tests  # S√≥ executa se os testes unit√°rios passarem
    runs-on: ubuntu-latest  # Executa o job em uma m√°quina Ubuntu mais recente
    steps:
      - name: Checkout do c√≥digo  # Baixa o c√≥digo do reposit√≥rio para a m√°quina de execu√ß√£o
        uses: actions/checkout@v2  # A√ß√£o do GitHub para fazer o checkout do c√≥digo

      - name: Configurar Python  # Define a vers√£o do Python para o ambiente
        uses: actions/setup-python@v3  # A√ß√£o que configura a vers√£o do Python
        with:
          python-version: "3.9"  # Especifica a vers√£o do Python (3.9)

      - name: Instalar depend√™ncias  # Instala as depend√™ncias listadas no arquivo requirements.txt
        run: pip install -r api/requirements.txt  # Instala os pacotes necess√°rios para rodar a API

      - name: Treinar modelo  # Executa o treinamento do modelo
        run: python model/train.py  # Roda o script de treinamento do modelo

      - name: Armazenar modelo treinado  # Salva o modelo treinado como artefato para uso posterior
        uses: actions/upload-artifact@v4  # A√ß√£o para fazer o upload do modelo treinado
        with:
          name: trained-model  # Nome do artefato
          path: model/model.pth  # Caminho do arquivo do modelo treinado

  # ==============================
  # 4. Job para deploy do modelo
  # ==============================
  deploy-model:  # Renomeado para deixar claro que √© o deploy do modelo
    needs: train-model  # S√≥ executa ap√≥s o treinamento ser conclu√≠do com sucesso
    runs-on: ubuntu-latest  # Executa o job em uma m√°quina Ubuntu mais recente
    timeout-minutes: 20  # Define um tempo limite de 20 minutos para o deploy do modelo
    steps:
      - name: Checkout do c√≥digo  # Baixa o c√≥digo do reposit√≥rio para a m√°quina de execu√ß√£o
        uses: actions/checkout@v2  # A√ß√£o do GitHub para fazer o checkout do c√≥digo

      - name: Configurar Python  # Define a vers√£o do Python para o ambiente
        uses: actions/setup-python@v3  # A√ß√£o que configura a vers√£o do Python
        with:
          python-version: "3.9"  # Especifica a vers√£o do Python (3.9)

      - name: Instalar depend√™ncias  # Instala as depend√™ncias listadas no arquivo requirements.txt
        run: pip install -r api/requirements.txt  # Instala os pacotes necess√°rios para rodar a API

      - name: Baixar modelo treinado  # Baixa o modelo treinado da etapa anterior
        uses: actions/download-artifact@v4  # A√ß√£o para fazer o download do artefato do modelo treinado
        with:
          name: trained-model  # Nome do artefato a ser baixado
          path: model/  # Caminho para onde o modelo ser√° salvo

      - name: Rodar API com FastAPI  # Inicia a API FastAPI para servir o modelo
        run: uvicorn api.main:app --host 0.0.0.0 --port 8000 &  # Executa o servidor em segundo plano para servir a API
