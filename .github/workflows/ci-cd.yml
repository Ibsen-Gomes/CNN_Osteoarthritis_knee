name: CI/CD for Deep Learning  # Nome do pipeline

on:
  push:
    branches:
      - main
      # 🚀 Incluindo a nova branch no pipeline

jobs:
  unit-tests:  # Renomeado para evitar confusão com "teste" no contexto de deep learning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código  # Baixa o código do repositório
        uses: actions/checkout@v2

      - name: Configurar Python  # Define a versão do Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Instalar dependências  # Instala pacotes listados no requirements.txt
        run: pip install -r api/requirements.txt

      - name: Executar testes unitários  # Executa testes unitários antes do treino
        run: pytest tests/test_train.py

  train-model:  # Renomeado para destacar que é a etapa de treinamento
    needs: unit-tests  # Só executa se os testes unitários passarem
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Instalar dependências
        run: pip install -r api/requirements.txt

      - name: Treinar modelo  # Executa o treinamento do modelo
        run: python model/train.py

      - name: Armazenar modelo treinado  # Salva o modelo treinado como artefato
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: model/model.pth

  deploy-model:  # Renomeado para deixar claro que é o deploy do modelo
    needs: train-model  # Só executa após o treinamento ser concluído
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Define tempo limite de 20 min para o deploy
    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Instalar dependências
        run: pip install -r api/requirements.txt

      - name: Baixar modelo treinado  # Baixa o modelo gerado na etapa train-model
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: model/

      - name: Rodar API com FastAPI  # Inicia a API para servir o modelo
        run: uvicorn api.main:app --host 0.0.0.0 --port 8000 &  # Executa em background